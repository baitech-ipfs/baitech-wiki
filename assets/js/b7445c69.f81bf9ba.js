"use strict";(self.webpackChunkbaitech_wiki=self.webpackChunkbaitech_wiki||[]).push([[962],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,o[1]=p;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2331:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],p={id:"pinFromS3",title:""},l=void 0,s={unversionedId:"pinning/pinFromS3",id:"pinning/pinFromS3",title:"",description:"Endpoint",source:"@site/docs/pinning/pin-from-s3.mdx",sourceDirName:"pinning",slug:"/pinning/pinFromS3",permalink:"/pinning/pinFromS3",editUrl:"https://github.com/baitech-ipfs/baitech-wiki/edit/main/docs/pinning/pin-from-s3.mdx",tags:[],version:"current",frontMatter:{id:"pinFromS3",title:""}},c=[{value:"Endpoint",id:"endpoint",children:[],level:2},{value:"Description",id:"description",children:[],level:2},{value:"Type",id:"type",children:[],level:2},{value:"Headers",id:"headers",children:[],level:2},{value:"Body",id:"body",children:[],level:2},{value:"Response",id:"response",children:[],level:2},{value:"Curl Example",id:"curl-example",children:[],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"endpoint"},"Endpoint"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://api.baitech-ipfs.net/pinning/pinFromS3"},"https://api.baitech-ipfs.net/pinning/pinFromS3")),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,"Asynchronously pin a file from AWS S3 compatible bucket. Following Principle Of Least Privilege (PLOP), Baitech backend will download the bucket object using a presigned URL before the preset expiry date."),(0,r.kt)("p",null,"The basic sequence workflow is:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Developer calls ",(0,r.kt)("em",{parentName:"p"},"pinFromS3")," API, with a self-hosted presigned URL generation endpoint that Baitech backend is supposed to access. A ",(0,r.kt)("em",{parentName:"p"},"pin job")," is generated, and pin job ID is returned to the caller, which could be used to query the ",(0,r.kt)("em",{parentName:"p"},"pin job")," status.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Baitech backend asynchronously picked up the ",(0,r.kt)("em",{parentName:"p"},"pin job"),", invokes the passed endpoint to get the presigned URL.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Baitech backend downloads the file from S3 bucket using the presigned URL, and pins it to IPFS network (which is eventually stored to Crust network also).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Retrieving ",(0,r.kt)("em",{parentName:"p"},"pin job")," result."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If a ",(0,r.kt)("em",{parentName:"p"},"pinResultCallback")," endpoint is also passed when developer calling ",(0,r.kt)("em",{parentName:"p"},"pinFromS3"),", Baitech backend will invoke that endpoint to pass pin result back.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Otherwise, developer could polling the ",(0,r.kt)("em",{parentName:"p"},"pin job")," status using ",(0,r.kt)("a",{parentName:"p",href:"/pinning/pinJobs"},"pinJobs")," API."))))),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Guidelines to generate presigned URL")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("ul",{parentName:"div"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Tencent Cloud",(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"https://cloud.tencent.com/document/product/436/35217"},"https://cloud.tencent.com/document/product/436/35217"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Amazon S3",(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"},"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html")))))),(0,r.kt)("h2",{id:"type"},"Type"),(0,r.kt)("p",null,"POST"),(0,r.kt)("h2",{id:"headers"},"Headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'"Authorization": "Bearer <YOUR_API_KEY>"\n')),(0,r.kt)("h2",{id:"body"},"Body"),(0,r.kt)("p",null,"The body of the request needs be in JSON format with following keys:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"presignedURLRequestEndpoint"),(0,r.kt)("br",null),"\nThe endpoint that Baitech backend uses to request a presigned download URL for the file to pin. It should be a GET API endpoint, with necessary query parameters as part of the URL."),(0,r.kt)("p",null,"Developer should provide this API endpoint, and define API parameters needed to identify which bucket object to pin. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://<YOU_API_HOST>/getPresignedURL?bucket=<YOUR_BUCKET_NAME>&region=<YOUR_BUCKET_REGION>&key=<YOUR_FILE_OBJECT_KEY>\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"pinResultCallbackEndpoint (optional)"),(0,r.kt)("br",null)),(0,r.kt)("p",null,"Optional endpoint to receive pinning result. If provided, the callback should accept a POST body with following keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"jobId"),": Id of the ",(0,r.kt)("em",{parentName:"li"},"pin job")," generated by Baitech backend."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"success"),": Whether the file is pinned successfully. Possible values are ",(0,r.kt)("em",{parentName:"li"},"true")," and ",(0,r.kt)("em",{parentName:"li"},"false"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"pinHash"),": If pinned successfully, IPFS hash of the file generated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"message"),": Descriptive message of the pinning result.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"decooMetadata (Optional)")),(0,r.kt)("p",null,"Developer can also include some metadata when pinning content to Baitech cloud. The metadata can later be used for easy querying on what you've pinned with ",(0,r.kt)("a",{parentName:"p",href:"/pinning/pinList"},"pinList")," request."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"decooMetadata")," takes following form:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "<A custom name. If not provided, the original name of the content (if feasible) will be used.>"\n}\n')),(0,r.kt)("p",null,"A sample request could be like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "presignedURLRequestEndpoint": "https://<YOU_API_HOST>/getPresignedURL?bucket=<YOUR_BUCKET_NAME>&region=<YOUR_BUCKET_REGION>&key=<YOUR_FILE_OBJECT_KEY>",\n  "pinResultCallbackEndpoint": "https://<YOUR_API_HOST>/pinResult",\n  "decooMetadata": {\n    "name": "<TEST_FILE>"\n  }\n}\n')),(0,r.kt)("h2",{id:"response"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "JobId": "<This is the id of the generated pin job>",\n  "JobStatus": "<Current status of the pin job.  If the request was successful, the status should be \'queued\'>"\n}\n')),(0,r.kt)("h2",{id:"curl-example"},"Curl Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'curl -X POST "https://api.baitech-ipfs.net/pinning/pinFromS3" \\\n  -H "Authorization: Bearer <YOUR_API_KEY>" \\\n  -H "Content-Type: application/json" \\\n  -F file=<YOUR_FILE>\n  --data \'{"presignedURLRequestEndpoint": "<PRESIGNED_URL_REQUEST_ENDPOINT>", "pinResultCallbackEndpoint": "<PIN_RESULT_CALLBACK_ENDPOINT>", "decooMetadata": {"name": "My File"}}\'\n')))}d.isMDXComponent=!0}}]);