"use strict";(self.webpackChunkbaitech_wiki=self.webpackChunkbaitech_wiki||[]).push([[864],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(n),y=a,h=f["".concat(l,".").concat(y)]||f[y]||s[y]||i;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9422:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],c={id:"apiKeys",title:""},l=void 0,u={unversionedId:"general/apiKeys",id:"general/apiKeys",title:"",description:"API Keys",source:"@site/docs/general/api-keys.mdx",sourceDirName:"general",slug:"/general/apiKeys",permalink:"/general/apiKeys",editUrl:"https://github.com/baitech-ipfs/baitech-wiki/edit/main/docs/general/api-keys.mdx",tags:[],version:"current",frontMatter:{id:"apiKeys",title:""}},p=[{value:"API Keys",id:"api-keys",children:[],level:2},{value:"Important",id:"important",children:[],level:2},{value:"Connecting to Baitech API",id:"connecting-to-baitech-api",children:[],level:2}],s={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"api-keys"},"API Keys"),(0,i.kt)("p",null,"API Keys are used to access Baitech API. When registering an account, an API Key is automatically generated for you. Currently, there is only one API Key for an account, with access to all Baitech APIs. But please be aware that we may allow users to create and manage multiple API Keys with more granular permission controls by themselves in the future."),(0,i.kt)("h2",{id:"important"},"Important"),(0,i.kt)("p",null,"Each API Key is actually a JWT token which acts on behalf of your account when accessing Baitech API. Be sure to keep it private."),(0,i.kt)("h2",{id:"connecting-to-baitech-api"},"Connecting to Baitech API"),(0,i.kt)("p",null,"The base url of Baitech API endpoint is: ",(0,i.kt)("a",{parentName:"p",href:"https://api.baitech-ipfs.net"},"https://api.baitech-ipfs.net")),(0,i.kt)("p",null,"To authenticate with this endpoint, you need to include your API Key as an Authorization header for all your API requests in the following format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"Authorization": "Bearer <YOUR_API_KEY>"\n')),(0,i.kt)("p",null,"You can use following curl request to test your API Key against the endpoint:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X GET "https://api.baitech-ipfs.net/ping" \\\n  -H "Authorization: Bearer <YOUR_API_KEY>" \\\n  -H "Content-Type: application/json"\n')),(0,i.kt)("p",null,"On success, it should return with 200 and following body:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Success": true\n}\n')))}f.isMDXComponent=!0}}]);